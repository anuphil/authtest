div.inboxApp.inboxList
   .sectionHeader
       div.row
           div.twelve.columns
               .breadcrumbsWrapper
                   core-breadcrumb(breadcrumbs="inboxController.breadcrumbs")
                   span.dropDownMenuWrapper(ng-show="inboxController.displayContentStream")
                       dropdown-menu.inboxDropdownArrow(label="inboxController.selectedDropdownItem", auto-width, ng-class="{currentInboxItem: inboxItemToDisplay.length > 0}", truncate-tag="true", on-close="inboxController.saveFavorites()")
                           div.popup
                               core-input-selector(selected-input="inboxController.selectedDropdownItemId",
                                    multi-select="false",
                                    on-change="inboxController.inputSelectUpdate(selectedItem, selectedItemGroup)",
                                    should-save-favorites="inboxController.shouldSaveFavorites",
                                    show-categories="inboxController.showTheseCategories",
                                    inbox-selected-items="inboxController.actionButtonsDisabled()"
                                    should-update-inputs="inboxController.shouldUpdateInputs")
               div
                   .contentStreamControls.right
                       ul.button-group.common-button-group.right
                           li.reportSettingsSection
                               a.button.iconButton.icon-signup(ng-click="inboxController.configureReport()", title="{{'Report Settings' | translate}}")
                       content-stream-date-picker(dates="inboxController.currentDateRange", date-change-callback="inboxController.dateRangeUpdated(startDate, endDate)")

   div.clearfix
   div(ng-show="inboxController.displayContentStream").row
       div.twelve.columns

           core-stream(ng-if="!inboxController.showRelevantContactStream")
               header.sticky(cs-sticky-header parent-id="header")
                   cs-action-bar
                       // SELECT ALL TOGGLE
                       cs-select-drop-down(ng-if="!inboxController.showRelevantContactStream", toggle-select-all="inboxController.toggleSelectAll()", select-all="inboxController.documentSelector.selectAll(inboxController.documentStreamData.documentArray, inboxController.docsWithVisibleDuplicates)", deselect-all="inboxController.documentSelector.deselectAll()", all-selected="inboxController.documentSelector.allSelected")

                       // DOCUMENT ACTION BUTTONS
                       div.actionButtonContainer(ng-show="inboxController.showActionButtons(inboxController.documentSelector.selectedItems)")
                           span.actionButton.icon-paperplane(translate-attr, translate-attr-title="Share", ng-click="inboxController.forwardDocuments()", ng-class="{disabled: inboxController.documentSelector.trueAllSelected && inboxController.documentSelector.allSelected}", id="shareDocsBtn")
                           forward-document-dialog(forward-document-model="forwardDocumentModel")
                           span.actionButton.icon-twitter-no-background(data-href="https://twitter.com/share", translate-attr, translate-attr-title="Post to Twitter", ng-if="!inboxController.isChinaPSPEntitled", ng-click="inboxController.multipleItemsSelected(inboxController.documentSelector.selectedItems) || inboxController.shareOnSocial('twitter')", ng-class="{disabled: inboxController.multipleItemsSelected(inboxController.documentSelector.selectedItems)}")
                           span.actionButton.icon-facebook-no-background(data-href='https://developers.facebook.com/docs/plugins/', translate-attr, translate-attr-title="Post to Facebook", ng-if="!inboxController.isChinaPSPEntitled", ng-click="inboxController.multipleItemsSelected(inboxController.documentSelector.selectedItems) || inboxController.shareOnSocial('facebook')", ng-class="{disabled: inboxController.multipleItemsSelected(inboxController.documentSelector.selectedItems)}")
                           span.actionButton.icon-tag(tag-modal, tag-added="inboxController.tagAdded(tagToAdd)", tag-documents="inboxController.documentSelector.selectedItems", translate-attr, translate-attr-title="Tag", ng-click="inboxController.toggleTagDialog($event)", ng-class="{active : inboxController.isTagDialogVisible, disabled: !inboxController.bulkSelectAllTagsToggleState && inboxController.documentSelector.trueAllSelected && inboxController.documentSelector.allSelected}")
                           //span {{ inboxController.documentSelector | json }}
                           span.actionButton.icon-translate(translate-attr, translate-attr-title="Translate", ng-click="inboxController.multipleItemsSelected(inboxController.documentSelector.selectedItems) || inboxController.translateArticle()", ng-class="{disabled: inboxController.multipleItemsSelected(inboxController.documentSelector.selectedItems)}")
                           span.actionButton.icon-download(translate-attr, translate-attr-title="Export Content", ng-click="inboxController.exportSelectedDocuments()", ng-class="{disabled : !inboxController.bulkSelectAllExportToggleState && inboxController.documentSelector.trueAllSelected && inboxController.documentSelector.allSelected}")
                           span.actionButton.icon-hide-document(translate-attr, translate-attr-title="Hide Documents", ng-click="inboxController.hideSelectedDocuments()", ng-if="inboxController.showHideUnhideOption && !inboxController.query.showHiddenDocuments", ng-class="{disabled: inboxController.documentSelector.trueAllSelected && inboxController.documentSelector.allSelected}")
                           span.actionButton.icon-unhide-document(translate-attr, translate-attr-title="Unhide Documents", ng-click="inboxController.unhideSelectedDocuments()", ng-if="inboxController.showHideUnhideOption && inboxController.query.showHiddenDocuments", ng-class="{disabled: inboxController.documentSelector.trueAllSelected && inboxController.documentSelector.allSelected}")
                       // STATIC STREAM BUTTONS
                       div.nonActionButtonContainer.right(ng-hide="inboxController.showActionButtons(inboxController.documentSelector.selectedItems)")
                           div.typeToggleContainer(ng-if="inboxController.isInfluencerDatabaseEntitled && inboxController.isInfluencerAppEntitled", ng-hide="inboxController.documentPredictionPanelExpanded || !inboxController.hasContactStream")
                               span.typeToggle.translate.selected Content
                               span.typeToggle.translate(ng-click="inboxController.showContactStream()") Influencers

                           div.staticButtonContainer
                               prediction-panel(disable-suggestions="true", collapsable, expanded="inboxController.documentPredictionPanelExpanded", predict-from="inboxController.predictionDocumentValues", resulting-filter="inboxController.predictionDocumentFilter")
                               span.actionButton.icon-sort
                                   dropdown-menu.changeSortContainer(label="inboxController.dummyDropdownLabel", auto-width="auto-width")
                                       drop-down-menu-items.sortSettings(option-object="inboxController.sortSettings.fields", save-settings="inboxController.sortFieldUpdated(index)")
                                       drop-down-menu-items.sortDirectionSettings(option-object="inboxController.sortSettings.direction", save-settings="inboxController.toggleSortDirection()")
                               span.actionButton.icon-settings
                                   dropdown-menu.changeSettingsContainer(label="inboxController.dummyDropdownLabel", auto-width="auto-width")
                                       drop-down-menu-items.changeDisplaySettings(option-object="inboxController.displaySettings.fields", save-settings="inboxController.displaySettingsUpdated(index)")
                                       drop-down-menu-items.changeGroupSettings(ng-show="inboxController.allowGroupOption", option-object="inboxController.displaySettings.group", save-settings="inboxController.groupSettingUpdated(index)")

                   cs-header(item-count="inboxController.documentStreamData.totalDocuments",  sort-field="inboxController.query.sortField", show-hide-unhide-option="inboxController.showHideUnhideOption", toggle-hidden-documents="inboxController.toggleHiddenDocuments()", show-hidden-documents="inboxController.query.showHiddenDocuments || false", lock-header="true && !inboxController.documentStreamData.isSearching")
                   cs-select-all-header(ng-if="inboxController.bulkSelectAllToggleState && !inboxController.documentPredictionPanelExpanded", ng-show="inboxController.documentSelector.allSelected", selected-count="{{inboxController.getSelectedCount(inboxController.documentSelector.selectedItems)}}", item-count="{{inboxController.documentStreamData.totalDocuments}}", reset-selections="inboxController.resetSelections()", true-all-selected="inboxController.documentSelector.trueAllSelected")

               cs-list
                   cs-list-loading-state(ng-if="inboxController.isPreparingSearch || inboxController.documentStreamData.isSearching")
                       div.spinner
                   div.listContainer(ng-if="inboxController.documentStreamData.documentArray.length", in-view-container)
                       div.card-container(ng-repeat="document in inboxController.documentStreamData.documentArray | documentFilter: inboxController.predictionDocumentFilter", in-view="$last && $inview && inboxController.nextDocumentPage()")
                           div.checkboxClickZone.pointer(ng-click="inboxController.documentSelector.toggleItemSelection(document, inboxController.documentStreamData.documentArray, inboxController.docsWithVisibleDuplicates)")
                               div.checkbox(id="selectDocument_{{document.documentId}}", ng-class="{selected:inboxController.documentSelector.isSelected(document)}")
                           document-card(document="document", display-settings="inboxController.rowDisplaySettings", show-duplicates="inboxController.showDuplicates(document.documentId)", document-click="inboxController.documentClick(event, document, url)", overlay-sentiment="inboxController.overlaySentiment(document)", is-influencer-database-entitled="inboxController.isInfluencerDatabaseEntitled", icm-base-url="{{inboxController.icmBaseUrl}}")
                           div(ng-if="document.dupDocs && document.dupDocs.length > 0 && inboxController.docsWithVisibleDuplicates[document.documentId]", ng-repeat="dupDoc in document.dupDocs", class="duplicate-container")
                               div.checkboxClickZone.pointer(ng-click="inboxController.documentSelector.toggleItemSelection(dupDoc, inboxController.documentStreamData.documentArray, inboxController.docsWithVisibleDuplicates)")
                                   div.checkbox(id="selectDocument_{{dupDoc.documentId}}", ng-class="{selected:inboxController.documentSelector.isSelected(dupDoc)}")
                               document-card(document="dupDoc", display-settings="inboxController.rowDisplaySettings", document-click="inboxController.documentClick(event, dupDoc, url)", overlay-sentiment="inboxController.overlaySentiment(dupDoc)", is-influencer-database-entitled="inboxController.isInfluencerDatabaseEntitled", icm-base-url="{{inboxController.icmBaseUrl}}")
                           more-duplicates(ng-if="inboxController.docsWithVisibleDuplicates[document.documentId]", document="document", toggle-duplicates="inboxController.showDuplicates(document.documentId)",  query="inboxController.query")
                   cs-list-paging-state(ng-if="inboxController.documentStreamData.isPaging")
                       div.spinner
                   cs-list-empty-state(ng-if="!inboxController.isPreparingSearch && !inboxController.documentStreamData.isSearching && inboxController.documentStreamData.documentArray.length <= 0")
                       div.mdLayoutFill.mdLayout.mdLayoutRow.mdLayoutAlignCenterCenter
                           div.emptyStateMessage.translate No Documents

           core-stream(ng-if="inboxController.isInfluencerDatabaseEntitled && inboxController.showRelevantContactStream")
               header.sticky(cs-sticky-header parent-id="header")
                   cs-action-bar
                       // SELECT ALL TOGGLE
                       cs-select-drop-down(ng-if="inboxController.showRelevantContactStream", toggle-select-all="inboxController.contactSelector.toggleSelectAll(inboxController.contactStreamData.contactArray, null, inboxController.predictionContactFilter)", select-all="inboxController.contactSelector.selectAll(inboxController.contactStreamData.contactArray)", deselect-all="inboxController.contactSelector.deselectAll()", all-selected="inboxController.contactSelector.allSelected")

                       // DOCUMENT ACTION BUTTONS
                       div.actionButtonContainer(ng-show="inboxController.showActionButtons(inboxController.contactSelector.selectedItems)")
                           span.actionButton.icon-add_user_icon(ng-click="inboxController.tagSelectedContacts()", translate-attr, translate-attr-title="Add Contacts")
                       // STATIC STREAM BUTTONS
                       div.nonActionButtonContainer.right(ng-hide="inboxController.showActionButtons(inboxController.contactSelector.selectedItems)")
                           div.typeToggleContainer(ng-hide="inboxController.contactPredictionPanelExpanded")
                               span.typeToggle.translate(ng-click="inboxController.showDocumentStream()") Content
                               span.typeToggle.translate.selected Influencers
                           div.staticButtonContainer
                               prediction-panel(collapsable, expanded="inboxController.contactPredictionPanelExpanded", predict-from="inboxController.predictionContactValues", resulting-filter="inboxController.predictionContactFilter")
                               span.actionButton.icon-sort.disabled
                               span.actionButton.icon-settings.disabled

                   cs-header(ng-if="!inboxController.contactStreamData.isSearching", item-count="inboxController.contactStreamData.relevantContactsCount", show-hide-unhide-option="inboxController.showHideUnhideOption")
                   cs-select-all-header(ng-if="inboxController.bulkSelectAllToggleState && !inboxController.contactPredictionPanelExpanded", ng-show="inboxController.contactSelector.allSelected", selected-count="{{inboxController.getSelectedCount(inboxController.contactSelector.selectedItems)}}", item-count="{{inboxController.contactStreamData.relevantContactsCount}}", reset-selections="inboxController.resetSelections()", true-all-selected="inboxController.contactSelector.trueAllSelected", item-type="contact")

               cs-list
                   cs-list-loading-state(ng-if="inboxController.isPreparingSearch || inboxController.contactStreamData.isSearching")
                       div.spinner
                   div.listContainer(ng-if="inboxController.contactStreamData.contactArray.length", in-view-container)
                       div.card-container(ng-repeat="contact in inboxController.contactStreamData.contactArray | contactFilter: inboxController.predictionContactFilter", in-view="$last && $inview && inboxController.nextContactPage()")
                           div.checkboxClickZone.pointer(ng-click="inboxController.contactSelector.toggleItemSelection(contact, inboxController.contactStreamData.contactArray)")
                               div.checkbox.contact-checkbox(ng-class="{selected:inboxController.contactSelector.isSelected(contact)}", id="selectContact_{{contact.id}}")
                           contact-card(contact="contact", on-click-body="inboxController.viewContact(contact)", show-relevant-articles="inboxController.showRelevantArticles(contact)", relevant-article-count="{{inboxController.contactStreamData.articleCountMapping[contact.id]}}", icm-base-url="{{inboxController.icmBaseUrl}}")
                    cs-list-paging-state(ng-if="inboxController.contactStreamData.isPaging")
                        div.spinner
                    cs-list-empty-state(ng-if="!inboxController.isPreparingSearch && !inboxController.contactStreamData.isSearching && inboxController.contactStreamData.contactArray.length <= 0")
                       div.mdLayoutFill.mdLayout.mdLayoutRow.mdLayoutAlignCenterCenter
                           div.emptyStateMessage.translate No Contacts
